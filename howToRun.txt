##use below command in vscode powershell terminal inside client folder to run the frontend without eslint features. otherwise it is throwing esling error

npm run start -- --no-eslint

---------
##how to build and run backend server folder locally as docker container##

//to build a docker container//
docker build -t book-store-backend  ./server   

//to run method 1(giving env variables in a .env file)://
docker run -p 5000:5000 --env-file ./server/.env book-store-backend

//to run method 2(to explicitly mention env variables in docker run command):
docker run -p 5000:5000 \
-e MONGODB_URI="your_mongodb_connection_string" \
-e PORT=5000 \
-e JWT_SECRET="your_secret_key" \
-e ANOTHER_VAR="some_value" \
book-store-backend

--------
##how async await works explained in below function?##

//older method - with .then()//
function getProfile() {
  console.log("1: Fetching profile...");

  fetch('https://api.example.com/user/profile')
    .then(response => {
      // This code is placed in a queue and runs later.
      // It will only execute after the network request is complete.
      console.log("3: Processing the received response...");
      return response.json();
    })
    .then(profile => {
      console.log('4: Profile data processed:', profile);
    })
    .catch(error => {
      console.error('Failed to fetch profile:', error);
    });

  console.log("2: Function continues immediately. It didn't wait!");
}

getProfile();
// Output order:
// "1: Fetching profile..."
// "2: Function continues immediately. It didn't wait!"
// ... (After some delay) ...
// "3: Processing the received response..."
// "4: Profile data processed: ..."

-------------
//newer method - with async/await//

// Function is marked as async
async function getProfile() {
  try {
    // Await pauses the function until the fetch is complete
    const response = await fetch('https://api.example.com/user/profile');

    // Await pauses again until the data is parsed
    const profile = await response.json();

    console.log('Profile:', profile);
  } catch (error) {
    console.error('Failed to fetch profile:', error);
  }
}
----------



